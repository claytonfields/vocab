This is the mail archive of the gcc@gcc.gnu.org mailing list for the GCC project.

April/May 2016 GNU Toolchain Update

From: Nick Clifton <nickc at redhat dot com>

To: gcc at gcc dot gnu dot org

Date: Fri, 03 Jun 2016 17:44:12 +0100

Subject: April/May 2016 GNU Toolchain Update

Authentication-results: sourceware.org; auth=none

Hi Guys, Well now that GCC 6 is out lets see what new features have started to appear in the toolchain: Several new warning options have been added to GCC: * The option -Wno-duplicate-decl-specifier has been added to generate warnings whenever a declaration contains duplicate const, volatile, restrict or _Atomic specifiers. This warning is enabled by -Wall. * The option -Wignored-attributes warns when an attribute is correctly assigned, but the compiler decided to ignore it anyway. This is different from the -Wattributes which warns when an attribute is either unknown or used in the wrong place. * The option -Wswitch-unreachable warns whenever a switch statement contains statements between the controlling expression and the first case label, which will never be executed. For example: switch (cond) { i = 15; case 5: <code> The option does not warn if the statement(s) between the controlling expression and the first case label are just variable declarations: switch (cond) { int i; case 5: <code> * The option -Wdangling-else warns about constructions where there may be confusion to which if statement an else branch belongs. For example: if (a) if (b) foo (); else bar (); * The option -Wmemset-elt-size warns about suspicious calls to the memset function, if the first argument references an array, and the third argument is a number equal to the number of elements, but not equal to the size of the array in memory. For example: int array[10]; memset (array, 0, 10); // Should be: memset (array, 0, 10 * sizeof (int)); A new point release of GDB is out: 7.11.1. This is a bugfix release addressing these issues: * PR remote/19863 (7.10 regression: gdb remote.c due to "setfs" with gdbserver < 7.7) * PR gdb/19829 (gdb crashes with PT and reverse next) * PR gdb/19676 (gdb fails with assert error if /proc is not mounted) * PR gdb/19828 (7.11 regression: non-stop gdb -p <process from a container>: internal error) * PR remote/19840 (gdb crashes on reverse-stepi) * PR gdb/19858 (GDB doesn't register the JIT libraries on attach) * PR gdb/19958 (Breakpoints/watchpoints broken on MIPS Linux <= 4.5) * PR build/20029 (symfile.c ambiguous else warning) * PR python/20037 (GDB use-after-free error) * PR gdb/20039 (Using MI/all-stop, can't interrupt multi-threaded program after continue)a In the development GDB sources a couple of new features have been added: * Fortran: Support structures with fields of dynamic types and arrays of dynamic types. * Rust language support. GDB now supports debugging programs written in the Rust programming language. Development in the binutils has mostly concentrated on bugfixing, but there have been a few new features added: * The ARM port of GAS now has support for the ARMv8-M architecture, including the security and DSP extensions. * The ARC port of GAS now accepts .extInstruction, .extCondCode, .extAuxRegister, and .extCoreRegister pseudo-ops that allow an user to define custom instructions, conditional codes, auxiliary and core registers. * The MIPS port of GAS can now generate code for the DSP Release 3 Application Specific Extension. * Linker scripts can now use a NOCROSSREFSTO directive. This is like the NOCROSSREFS directive which ensures that two or more output sections are entirely independent from each other, except that it does allow one way referencing. The NOCROSSREFS_TO directive takes a list of output section names and complains if the first section is referenced from any of the other sections. Cheers Nick