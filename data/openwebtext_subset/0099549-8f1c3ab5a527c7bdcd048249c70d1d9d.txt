When I initially started my Magic Mirror project, it was just to see if it was possible. It was never meant to be an open source project, let alone a commercial project. When the project eventually got more famous, it wouldn’t take long for the first commercial opportunities …

After the blog posts of my Magic Mirror went viral (mainly because the Raspberry Pi foundation blogged about it), the first inquiries started to appear in my inbox. An though I wasn’t really interested in building Magic Mirrors as paid projects, one inquiry really stood out.

It turned out a successful entrepreneur was building a new house and was looking for a nice eye-catcher as the center piece of the living room. Since the living room would contain a mirror anyway, the Magic Mirror project was the perfect fit.

The mirror ended up being a 2 x 3 meter mirror with a 60" LED TV behind it. As far as I know this is the largest Magic Mirror so far.

The client’s work consists of a lot of traveling, and thus he wanted a way to show the places on earth he visited most. Using Google’s WebGL Globe I created a module that showed the visited spots using spikes on a rotating globe. If a spot is visited more than once, the spike becomes longer.

Above video was made during the development process. The rotating globe really gives a nice futuristic touch to the project. Because of the WebGL usage, this Mirror isn’t running on a Raspberry Pi. It uses a Mac Mini as its host allowing me to built more processor intensive modules.



Since the mirror is larger than the screen itself, a black frame is placed around the monitor. This prevents you from seeing the guts of the Magic Mirror. On the photo you can see the frame around the monitor. But honestly, in real life it doesn’t affect the end result in a negative way. Better yet: it gives some depth to the project.

Having such a large Magic Mirror in the center of your living room gives you a lot of opportunities for cool home automation projects. So as you can guess, this is an ongoing project.

The best part of this project? It allowed me to work on the Magic Mirror on a paid basis, resulting in the MagicMirror² platform. Of course, the client specific modules (like the globe) are kept private. But any modification in the core will be added to the open source platform.

That leaves me with the most important part of this blog: thanking my client for the trust in the work he has shown by letting me built this awesome Magic Mirror and allowing me to continue my work on the MagicMirror² project.