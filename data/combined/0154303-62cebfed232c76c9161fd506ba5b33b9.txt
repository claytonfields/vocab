Quote: 1. Install tezet's JB10(if you don't have one already).

2. extract 2ndboot.tar(attached) into /data folder, check that /data/2ndboot/hbootuser file has execute permissions.

3. overwrite /system/bootmenu/script/2nd-boot.sh(DON'T TOUCH 2nd-init.sh!!!) with the one from tar(2nd-boot.sh.tar) and check it has execute permissions.

4. reboot into bootmenu

5. change the default boot method to 2ndboot

6. Restart your phone. Most likely it will crash few times at bootlogo, but be patiant, it finally should boot

7. If you wish to get back to 2nd-init, then enter bootmenu again and change default boot method back to 2nd-init, or manually boot 2nd-init

Quote: Boots very sloooowly

Its' quite laggy just after boot.

GPS does not seem to work yet

Quote: 01.10.2012 - corrected battery problems(thanks to Quarx and kabaldan)

03.10.2012 - corrected ramdisk(previous one was calling some script which I forgot to attach to this post , new one has this script inside), so that now you should be able to boot it; updated instructions how to install it; enabled TLS in the kernel(thanks to kabaldan)

04.10.2012 - touch driver updated, now should work with lastest JB(thanks to Eleanor_Ir, Quarx), adb fixed(I hope , stability fix(thanks to Quarx)

It seems that finally I was able to boot custom kernel with working radioIt's not very stable yet(it stops/crashes at bootanimation quite frequently), and is quite laggy just after boot, but once it boots it seems to be almost usable. Wifi works, sdcard also. Haven't checked bluetooth.Credits for this goes to:* milestone1 devs... for sharing 2ndboot source code and providing so much info regarding milestone1/2 phones* Motorola... for providing source code(not fully working, but was a great help anyway) for enabling UART over micro usb for debugging purposes(without this I woudn't make any progress)* tezet... for making quite goodroms used by 2ndbootIf you wish to try it(BEWARE THAT IT MIGHT BRICK YOUR PHONE, SO DON'T SAY THAT I HAVEN'T WARNED YOU), then do as follows:Please let me know if someone actually run it and was able to boot(so that to find out if I haven't forgot to include some more files(see changelog for 03.10.2012In milestone2(as probably in many others UMTS phones made by Motorola) the BP is somehow very sensible and does not like to be disconnected/reenumerated. The main goal of this 2ndboot is then to not allow it to be disconnected. To do this, in the new kernel I've skipped a few resets(EHCI, TLL, individual port resets), and instead of enumerating BP, I've used the hardcoded usb device address(which for milestone2 seems to be equal to 2).I attach patch(radio.patch) with the changes I've done to the kernel sources from here:This seems to work(sometime) for both milestone2 and defy.For other motorola phones:1. First of all, check with lsusb what's the address and vendor/product id of your BP(for milestone2 it's 0x22b8 and 0x40e6).2. If the BP usb device address is 2, then just apply the patch(probably it will need some small modifications), and check if it works.3. If the BP usb device address is not 2, then edit usb/core/hub.c function hub_port_init(providing that it's there for your kernel), and replace 0x02 in the place where usb_control_msg to get descriptors is sent with address of your deviceIf it does not work, then you can try the following:Create a procedure to send usb GetDescriptors request using omap3 ehci registers, and call it at different boot stages/usb initialization stages to find out how long the radio remains attached, and comment/change appropriate fragments of kernel code, to preserve this until usb port is initialized. If you wish, I can share the procedure I've written(in the patch file this is that czecho_get_descriptors called in many places) for milestone2, but it probably would need some modification to work with your device).2ndboot module sources are here: